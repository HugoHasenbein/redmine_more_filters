<%= content_for :header_tags do %>
<script type="text/javascript">

var buildFilterRowWithoutMoreFilters = buildFilterRow;
buildFilterRow = function (field, operator, values) {

  var filterOptions = availableFilters[field];
  if (!filterOptions) return;
  
  /* original buildFilterRow */
  buildFilterRowWithoutMoreFilters(field, operator, values);
  
  /* add redmine_more_filters specific fields, if necessary */
  var fieldId = field.replace('.', '_');
  var filterValues = filterOptions['values'];
  var operators = operatorByType[filterOptions['type']];
  var i, select;
  
  select = $('#tr_'+fieldId).find('td.operator select');
  
  switch (filterOptions['type']) {
  
  case "list_multiple":
    $('#tr_'+fieldId).find('td.values').append(
      '<span style="display:none;"><select class="value" id="values_'+fieldId+'_1" name="v['+field+'][]"></select>' +
      ' <span class="toggle-multiselect">&nbsp;</span></span>'
    );
    select = $('#tr_'+fieldId).find('td.values select');
    if (values.length > 1) { select.attr('multiple', true); }
    for (i = 0; i < filterValues.length; i++) {
      var filterValue = filterValues[i];
      var option = $('<option>');
      if ($.isArray(filterValue)) {
        option.val(filterValue[1]).text(filterValue[0]);
        if ($.inArray(filterValue[1], values) > -1) {option.attr('selected', true);}
        if (filterValue.length == 3) {
          var optgroup = select.find('optgroup').filter(function(){return $(this).attr('label') == filterValue[2]});
          if (!optgroup.length) {optgroup = $('<optgroup>').attr('label', filterValue[2]);}
          option = optgroup.append(option);
        }
      } else {
        option.val(filterValue).text(filterValue);
        if ($.inArray(filterValue, values) > -1) {option.attr('selected', true);}
      }
      select.append(option);
    }
    break;
    
  case "time_past":
    $('#tr_'+fieldId).find('td.values').append(
      '<span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_1" size="3" class="value" /> '+labelHourPlural+'</span>' +
      ' <span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_2" size="3" class="value" /> '+labelHourPlural+'</span>' +
      ' <span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'" size="3" class="value" /> '+labelHourPlural+'</span>' +
      ' <span style="display:none;"><input type="time" name="v['+field+'][]" id="values_'+fieldId+'_3" size="10" class="value" /> '+labelClockTime+'</span>' +
      ' <span style="display:none;"><input type="time" name="v['+field+'][]" id="values_'+fieldId+'_4" size="10" class="value" /> '+labelClockTime+'</span>'
    );
    $('#values_'+fieldId+'_1').val(values[0]);
    $('#values_'+fieldId+'_2').val(values[1]);
    $('#values_'+fieldId).val(values[0]);
    $('#values_'+fieldId+'_3').val(values[0]);
    $('#values_'+fieldId+'_4').val(values[1]);
    break;
  }
};

var toggleOperatorWithoutMoreFilters = toggleOperator;
toggleOperator = function (field, operator, values) {
  var fieldId = field.replace('.', '_');
  var operator = $("#operators_" + fieldId);
  switch (operator.val()) {
/*
  "=="   is_strict,
  "!!"   is_not_strict,
   
  "^="   begins_with,          (already added in RM 4 as "^")
  "*^="  begins_with_any,
  "!^="  not_begins_with,
  "!*^=" not_begins_with_any,
   
  "$="   ends_with,            (already added in RM 4 as "$")
  "*$="  ends_with_any,
  "!$="  not_ends_with,
  "!*$=" not_ends_with_any,
   
  "*="   any_of,
  "!*="  none_of,
   
  "*~"   contains_any,
  "!*~"  not_contains_any,
  "[~]"  contains_all,
  "![~]" not_contains_all,
   
  "nd"   tomorrow,
  "nw"   next_week,
  "nm"   next_month,
   
  "<<"   past,
  ">>"   future,
   
  ">h-"  less_than_hours_ago,
  "<h-"  more_than_hours_ago,
  "><h-" between_ago,
  "><h"  between,
   
  "<<t"  past clocktime,
  "t>>"  future clocktime
*/
    case "nw":     /* next week  (already added in RM 4) */
    case "nm":     /* next month (already added in RM 4) */
    case "n3m":    /* next three months  */
    case "lm":     /* last month (already added in RM 4) */
    case "<<":     /* past   */
    case ">>":     /* future */
    case "<<t":    /* past clocktime */
    case "t>>":    /* future clocktime */
      enableValues(field, []);
      break;
    case "><h-":   /* between hours ago */
      enableValues(field, [0,1]);
      break;
    case "><h":    /* between hours */
      enableValues(field, [3,4]);
      break;
    case ">h-":    /* less than hours ago */
    case "<h-":    /* more than hours ago */
      enableValues(field, [2]);
      break;
    default:
      toggleOperatorWithoutMoreFilters(field, operator, values);
      break;
  }
}
</script>

<% end %>